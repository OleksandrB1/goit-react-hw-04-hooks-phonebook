{"version":3,"sources":["components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","className","s","form","event","preventDefault","label","type","pattern","title","required","value","onChange","e","currentTarget","button","Filter","change","input","Contacts","list","remove","map","id","listItem","item","onClick","App","contacts","setContacts","filter","setFilter","useEffect","pars","JSON","parse","localStorage","getItem","setItem","stringify","require","generate","find","contact","alert","toLowerCase","includes","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.642d951a.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport s from \"./Form.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const submit = (event) => {\n    event.preventDefault();\n    onSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={submit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={(e) => {\n              setName(e.currentTarget.value);\n            }}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={(e) => {\n              setNumber(e.currentTarget.value);\n            }}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contacts\n        </button>\n      </form>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, change }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input className={s.input} type=\"text\" value={value} onChange={change} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import s from \"./Contacts.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Contacts = ({ list, remove }) => {\n  return (\n    <ul>\n      {list.map(({ id, name, number }) => (\n        <li key={id} className={s.listItem}>\n          <span className={s.item}>{name}:</span>\n          <span className={s.item}>{number}</span>\n          <button\n            onClick={() => {\n              remove(id);\n            }}\n            type=\"button\"\n            className={s.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  remove: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import { useState, useEffect } from \"react\";\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport Contacts from \"./components/Contacts/Contacts\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const pars = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (pars) {\n      setContacts(pars);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!contacts) {\n      return;\n    }\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const short = require(\"short-uuid\");\n    const id = short.generate();\n    if (!contacts.find((contact) => contact.name === name)) {\n      setContacts((contacts) => [\n        ...contacts,\n        { id: id, name: name, number: number },\n      ]);\n    } else alert(`${name} is already in contacts.`);\n  };\n\n  const removeContact = (id) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== id)\n    );\n  };\n\n  const renderList = () => {\n    return [...contacts].filter(({ name }) =>\n      name.toLowerCase().includes(filter)\n    );\n  };\n\n  const filterState = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Form onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} change={filterState} />\n      <Contacts list={renderList()} remove={removeContact} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3u5Xq\",\"label\":\"Form_label__czw-O\",\"button\":\"Form_button__3iro_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contacts_listItem__3eYo6\",\"item\":\"Contacts_item__3JaZG\",\"button\":\"Contacts_button__1VK43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3lqra\",\"input\":\"Filter_input__1HNji\"};"],"sourceRoot":""}